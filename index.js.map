{"version":3,"sources":["index.js"],"names":["main","express","require","app","html","sync","Promise","fs","use","static","__dirname","engine","renderFile","set","EXISTDB","xml2js","get","req","res","render","data","xmlResult","query","testExist","send","params","listen","console","log","Date","toISOString"],"mappings":";;;;;;;;;;;wEA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeA,I;;;;;AATf;;;;AAtBA,IAAIC,UAAUC,QAAQ,SAAR,CAAd;;AAEA,IAAIC,MAAMF,SAAV;;AAEA,IAAIG,OAAOF,QAAQ,MAAR,CAAX;;AAEA,IAAIG,OAAOH,QAAQ,aAAR,CAAX;;AAEA,IAAII,UAAUJ,QAAQ,aAAR,EAAuBI,OAArC;AACA,IAAIC,KAAKL,QAAQ,IAAR,CAAT;;AAEAC,IAAIK,GAAJ,CAAQP,QAAQQ,MAAR,CAAeC,YAAY,oBAA3B,CAAR;AACA;AACAP,IAAIK,GAAJ,CAAQP,QAAQQ,MAAR,CAAeC,YAAY,QAA3B,CAAR;AACA;AACAP,IAAIK,GAAJ,CAAQP,QAAQQ,MAAR,CAAeC,YAAY,OAA3B,CAAR;;AAEAP,IAAIK,GAAJ,CAAQP,QAAQQ,MAAR,CAAeC,YAAY,SAA3B,CAAR;;AAEAP,IAAIQ,MAAJ,CAAW,MAAX,EAAmBT,QAAQ,KAAR,EAAeU,UAAlC;AACAT,IAAIU,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;AAIA,IAAIC,UAAUZ,QAAQ,WAAR,CAAd;;AAEA,IAAIa,SAASb,QAAQ,QAAR,CAAb;;AAQAF;;AAGAG,IAAIa,GAAJ,CAAQ,GAAR,EAAY,UAASC,GAAT,EAAaC,GAAb,EAAiB;AAC3BA,MAAIC,MAAJ,CAAW,YAAX,EAAyB,EAAEC,MAAM,EAAR,EAAzB;AACD,CAFD;;AAIAjB,IAAIa,GAAJ,CAAQ,OAAR;AAAA,yEAAgB,kBAAeC,GAAf,EAAmBC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVG,qBAFU,GAEE,0BAFF;;AAAA,iBAGVJ,IAAIK,KAAJ,CAAUA,KAHA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIOR,QAAQS,SAAR,CAAkBN,IAAIK,KAAJ,CAAUA,KAA5B,CAJP;;AAAA;AAIXD,qBAJW;;AAAA;AAMdH,gBAAIM,IAAJ,CAASH,SAAT;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;;AAUAlB,IAAIa,GAAJ,CAAQ,8BAAR,EAAwC,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC1DA,MAAIM,IAAJ,CAASP,IAAIQ,MAAb;AACD,CAFD;;AAIAtB,IAAIuB,MAAJ,CAAW,IAAX,EAAiB,YAAY;AAC3BC,UAAQC,GAAR,CAAY,sCAAsC,IAAIC,IAAJ,GAAWC,WAAX,EAAlD;AACD,CAFD;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["var express = require('express');\n\nvar app = express();\n\nvar html = require(\"html\");\n\nvar sync = require('synchronize');\n\nvar Promise = require('es6-promise').Promise;\nvar fs = require('fs');\n\napp.use(express.static(__dirname + '/domainParserviews'));\n//Store all HTML files in view folder.\napp.use(express.static(__dirname + '/views'));\n//Store all JS and CSS in Scripts folder.\napp.use(express.static(__dirname + '/dist'));\n\napp.use(express.static(__dirname + '/images'));\n\napp.engine('html', require('ejs').renderFile);\napp.set('view engine', 'html');\n\nimport {URL_BASE} from \"./config\"\n\nvar EXISTDB = require(\"./existDB\")\n\nvar xml2js = require('xml2js');\n\n\n\n\nasync function main(){\n\n}\nmain();\n\n\napp.get('/',function(req,res){\n  res.render('index.html', { data: \"\" });\n});\n\napp.get('/data',async function(req,res){\n\n  var xmlResult = \"<div>invalid query</div>\"\n  if (req.query.query){\n     xmlResult = await EXISTDB.testExist(req.query.query)\n  }\n  res.send(xmlResult)\n\n});\n\napp.get('/users/:userId/books/:bookId', function (req, res) {\n  res.send(req.params)\n})\n\napp.listen(6541, function () {\n  console.log('Application Running on port 6541 ' + new Date().toISOString());\n});\n\n\n//\n// function getUrl(message){\n//   if ( message == undefined) {return \"\"};\n//   var expression = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi;\n//   var regex = new RegExp(expression);\n//   var t = message;\n//\n//   var result = t.match(regex);\n//   if (result)\n//   {\n//     return result[0].toString();\n//   } else {\n//     return \"\";\n//   }\n// }\n"]}