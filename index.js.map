{"version":3,"sources":["index.js"],"names":["main","express","require","app","html","sync","Promise","fs","use","static","__dirname","engine","renderFile","set","EXISTDB","convert","XmlReader","xmlQuery","cachedLastQuery","get","req","res","render","name","query","textSearch","xmlResult","send","xml2json","compact","spaces","getAllPeople","console","log","page","getAllEntriesPaged","limit","getAllEntries","listen","Date","toISOString"],"mappings":"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","file":"index.js","sourcesContent":["var express = require('express');\n\nvar app = express();\n\nvar html = require(\"html\");\n\nvar sync = require('synchronize');\n\nvar Promise = require('es6-promise').Promise;\nvar fs = require('fs');\n\napp.use(express.static(__dirname + '/domainParserviews'));\n//Store all HTML files in view folder.\napp.use(express.static(__dirname + '/views'));\n//Store all JS and CSS in Scripts folder.\napp.use(express.static(__dirname + '/dist'));\n\napp.use(express.static(__dirname + '/images'));\n\napp.engine('html', require('ejs').renderFile);\napp.set('view engine', 'html');\n\nimport {URL_BASE} from \"./config\"\n\nvar EXISTDB = require(\"./existDB\")\n\nvar convert = require('xml-js');\n\n// var XMLSplitter = require('xml-splitter')\n\n// var $$ = require('xml-selector');\n\nconst XmlReader = require('xml-reader');\nconst xmlQuery = require('xml-query');\n\n\n\nvar cachedLastQuery = [];\n//\n// var xs = new XMLSplitter('/exist:result/entries//entry')\n//\n//     xs.on('data', function(data) {\n//         cachedLastQuery.push(data);\n//\n//     })\n//\n//\n//     xs.on('end', function(counter) {\n//         console.log(counter+' slices !') // counts all the slices ever apparently!.\n//     })\n\n\nasync function main(){\n\n}\nmain();\n\n\napp.get('/api/',function(req,res){\n  res.render('index.html', { name: \"cucu\" });\n});\n\napp.get('/api/data',async function(req,res){\n  if (req.query.query){\n      var xmlResult = await EXISTDB.textSearch(req.query.query)\n     res.send(convert.xml2json(xmlResult, {compact: true, spaces: 4}))\n  }\n});\n\napp.get('/api/allPeople',async function(req,res){\n  var xmlResult = await EXISTDB.getAllPeople()\n    res.send(convert.xml2json(xmlResult, {compact: true, spaces: 4}))\n});\n\n// app.get('/allEntries',async function(req,res){\n//\n//\n//   var xmlResult = await EXISTDB.getAllEntries()\n//\n//   const ast = XmlReader.parseSync(xmlResult);\n//\n//   const xq = xmlQuery(ast);\n//\n//   //xmlQuery(ast).children().children().each(node => console.log(node.text()));\n//   xmlQuery(ast).children().children().each(node => console.log(\"ENTRY:: \"+xmlQuery(node).text()))\n//\n//\n//   // cachedLastQuery =[];\n//   // xs.parseString(xmlResult);\n//   // cachedLastQuery.map(function (item,i) {\n//   //\n//   //   console.log(item.div)\n//   //\n//   // })\n//   // console.log(cachedLastQuery)\n//\n//   res.send(xmlResult)\n//\n// });\n\napp.get('/api/allEntriesPaged',async function(req,res){\n  console.log(req.query.page)\n  if (req.query.page){\n    var xmlResult = await EXISTDB.getAllEntriesPaged(req.query.page,req.query.limit)\n    // console.log(xmlResult)\n     res.send(xmlResult)\n  }\n});\n\napp.get('/api/allEntries',async function(req,res){\n\n\n  var xmlResult = await EXISTDB.getAllEntries()\n\n  // const ast = XmlReader.parseSync(xmlResult);\n  //\n  // const xq = xmlQuery(ast);\n  //\n  // //xmlQuery(ast).children().children().each(node => console.log(node.text()));\n  // xmlQuery(ast).children().children().each(node => console.log(\"ENTRY:: \"+xmlQuery(node).text()))\n\n    // res.send(convert.xml2json(xmlResult, {compact: true, spaces: 4}))\n\n    res.send(xmlResult);\n\n\n});\n\n\n// app.get('/users/:userId/books/:bookId', function (req, res) {\n//   res.send(req.params)\n// })\n\napp.listen(6541, function () {\n  console.log('Application Running on port 6541 ' + new Date().toISOString());\n});\n\n\n//\n// function getUrl(message){\n//   if ( message == undefined) {return \"\"};\n//   var expression = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi;\n//   var regex = new RegExp(expression);\n//   var t = message;\n//\n//   var result = t.match(regex);\n//   if (result)\n//   {\n//     return result[0].toString();\n//   } else {\n//     return \"\";\n//   }\n// }\n"]}